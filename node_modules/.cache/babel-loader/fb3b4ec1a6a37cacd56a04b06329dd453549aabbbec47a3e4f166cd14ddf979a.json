{"ast":null,"code":"/*\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst TodoForm = ({ addTodo }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.length <= 10) {\r\n      alert(\"Task description must be longer than 10 characters.\");\r\n      return;\r\n    }\r\n    addTodo({\r\n      name,\r\n      deadline: deadline || new Date().toISOString().split(\"T\")[0],\r\n    });\r\n    setName(\"\");\r\n    setDeadline(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={name}\r\n        placeholder=\"What is the task today?\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        className=\"todo-deadline\"\r\n        value={deadline}\r\n        onChange={(e) => setDeadline(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"todo-btn\">\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n\r\n/*\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst TodoForm = ({ addTodo }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value.length <= 10) {\r\n      alert(\"Task description must be longer than 10 characters.\");\r\n      return;\r\n    }\r\n    addTodo({\r\n      name: value,\r\n      deadline: deadline || new Date().toISOString().split(\"T\")[0],\r\n    });\r\n    setValue(\"\");\r\n    setDeadline(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={value}\r\n        placeholder=\"What is the task today?\"\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        className=\"todo-deadline\"\r\n        value={deadline}\r\n        onChange={(e) => setDeadline(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"todo-btn\">\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/Dell/todo_list/src/components/TodoForm.js"],"sourcesContent":["/*\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst TodoForm = ({ addTodo }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name.length <= 10) {\r\n      alert(\"Task description must be longer than 10 characters.\");\r\n      return;\r\n    }\r\n    addTodo({\r\n      name,\r\n      deadline: deadline || new Date().toISOString().split(\"T\")[0],\r\n    });\r\n    setName(\"\");\r\n    setDeadline(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={name}\r\n        placeholder=\"What is the task today?\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        className=\"todo-deadline\"\r\n        value={deadline}\r\n        onChange={(e) => setDeadline(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"todo-btn\">\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n\r\n/*\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst TodoForm = ({ addTodo }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [deadline, setDeadline] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value.length <= 10) {\r\n      alert(\"Task description must be longer than 10 characters.\");\r\n      return;\r\n    }\r\n    addTodo({\r\n      name: value,\r\n      deadline: deadline || new Date().toISOString().split(\"T\")[0],\r\n    });\r\n    setValue(\"\");\r\n    setDeadline(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={value}\r\n        placeholder=\"What is the task today?\"\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        className=\"todo-deadline\"\r\n        value={deadline}\r\n        onChange={(e) => setDeadline(e.target.value)}\r\n      />\r\n      <button type=\"submit\" className=\"todo-btn\">\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}